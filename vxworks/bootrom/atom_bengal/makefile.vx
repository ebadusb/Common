################################################################################
#
# Makefile for Trima & Optia bootroms for Atom Bengal CCAs (EBox 2016).
# These bootroms are used for the Safety boards, and Optia's APC board.
#
# Note: this makefile can be invoked from the bootrom makefile under Trima/Optia
# with the value of BIN_DIR passed on the command-line. Othewise, output goes
# to ../bin.
################################################################################

# Hack for building a bootrom for use with Common Kernel. TODO: revisit this
ifeq ($(CK),true)
BIN_DIR   := $(CKDIR)/bootrom/bin
MY_DFLAGS := -DCOMMON_KERNEL
endif

# ROM_FILES are the final output copied to BIN_DIR
BIN_DIR    ?= $(COMDIR)/vxworks/bootrom/bin
ROM_FILES  := $(BIN_DIR)/bootrom_bengal_trima.pxe \
              $(BIN_DIR)/bootrom_bengal_optia.pxe \
              $(BIN_DIR)/bootrom_bengal_optia_apc.pxe 
THIS_DIR   := $(notdir $(shell pwd))

.PHONY: all clean

ifeq ($(BUILD_TYPE),CLEAN)
all: clean
else
all: $(ROM_FILES)
endif

ifeq ($(TERSE),true)
 Q=@
 MV=mv
 SUBMAKE_ARGS += --silent
else
 Q=
 MV=mv -v
endif

# Convenience targets for building individual bootroms
#
.PHONY: trima optia apc
trima:	$(BIN_DIR)/bootrom_bengal_trima.pxe
optia:	$(BIN_DIR)/bootrom_bengal_optia.pxe
apc:	$(BIN_DIR)/bootrom_bengal_optia_apc.pxe 
	
# Target-specific flags
#
$(BIN_DIR)/bootrom_bengal_trima.pxe:     MY_DFLAGS += -DTRIMA_BOOTROM
$(BIN_DIR)/bootrom_bengal_optia.pxe:     MY_DFLAGS += -DOPTIA_BOOTROM
$(BIN_DIR)/bootrom_bengal_optia_apc.pxe: MY_DFLAGS += -DOPTIA_APC_BOOTROM


SUBMAKE_ARGS += EXTRA_DEFINE="$(MY_DFLAGS)"

# Not a true list of dependencies, but sufficient to trigger developer rebuilds
#
ROM_DEPS := $(wildcard *.h) \
            $(wildcard *.c) \
            $(wildcard sys*.s)

$(ROM_FILES): $(ROM_DEPS) | $(BIN_DIR)
	@echo x Building: $(THIS_DIR)/$@
	$(Q)rm -f *.o
	$(Q)$(MAKE) $(SUBMAKE_ARGS) bootrom.pxe
	$(Q)$(MV) -f bootrom.pxe $@
	@echo Done: $@

bootrom.sys : bootrom_uncmp

$(BIN_DIR):
	md $(subst /,\,$@)

clean:
	$(Q)$(MAKE) clean
	$(Q)rm -f $(ROM_FILES)
